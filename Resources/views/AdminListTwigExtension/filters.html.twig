{% if filter.filterdefinitions|length > 0 %}
    
    <form action="{{ path(basepath, extraparams) }}">
    	<div class="filter_lists">
    		<label for="filter_on_off" class="status all">Show all</label>
    		<input type="checkbox" id="filter_on_off" class="filter_on_off" {% if filter.currentfilters|length >0 %}checked{% endif %} />
    		<div class="filters_wrp">
    			<label for="filter_on_off" class="status">Filter</label>
    			<ul class="filters">
    				<li class="filterline {% if filter.currentfilters|length >0 %}hidden{% endif %}" id="addline">
    					<select class="filterselect" id="addfilter" onchange="createFilter(this, true)">
    						<option>{{ "form.addfilter"|trans }}</option>
    						{% for columnname, value in filter.filterdefinitions %}
    							{% if value['filtername'] is defined %}
    								{% set filtername = value['filtername'] %}
    							{% else %}
    								{% set filtername = columnname %}
    							{% endif %}
    						    <option value="{{columnname}}">{{filtername|trans}}</option>
    						{% endfor %}
    					</select>
    				</li>
	    			<li class="filterline">
    					{% for columnname, value in filter.currentfilters %}
    					    <select class="filterdummy filterselect" name="filter_columnname[]" onchange="updateOptions(this)">
    					        {% for defcolumnname, defvalue in filter.filterdefinitions %}
    					        	{% if defvalue['filtername'] is defined %}
    					        		{% set filtername = defvalue['filtername'] %}
    					        	{% else %}
    					        		{% set filtername = defcolumnname %}
    					        	{% endif %}
    					        	<option value="{{defcolumnname}}" {% if value.columnname == defcolumnname %} selected="selected" {% endif %}>{{filtername | trans}}</option>
    					        {% endfor %}
    					    </select>
    					    <input type="hidden" name="filter_uniquefilterid[]" class="uniquefilterid" value="{{value.uniqueid}}" />
			                <span class="filteroptions">
			                    {% set namesuffix %}_{{value.uniqueid}}{%endset%}
			                    {% include value.type.template with {'filtertype': value.type, 'data': value.data, 'nameprefix':'filter_', 'namesuffix': namesuffix} %}
			                </span>
			                {% if filter.currentfilters|length >1 %}
			                	<button class="remove_filter" type="button" onclick="return removeFilter(this, false)"><i class="icon-remove-sign"></i></button>
			                {% endif %}
    					{% endfor %}  					
    				</li>
    				<li>
    					<button class="btn add_filter" type="button" onclick="return createFilter(this, true)"><i class="icon-plus-sign"></i>{{ "form.addfilter"|trans }}</button>
    				</li>
    				<li>
    					<button class="btn apply_filter" type="submit">Filter</button>
    				</li>
    			</ul>
    		</div>
    	</div>
    </form>
    
    
    
    
    
	<div id="filterdummyline" class="hidden">
		<li class="filterline">
			<select class="filterdummy filterselect" name="columnname[]" onchange="updateOptions(this)">
			    {% for columnname, value in filter.filterdefinitions %}
			    {% if value['filtername'] is defined %}
			        		{% set filtername = value['filtername'] %}
			        	{% else %}
			        		{% set filtername = columnname %}
			        	{% endif %}
			    <option value="{{columnname}}">{{filtername|trans}}</option>
			    {% endfor %}
			</select>
			<input type="hidden" name="uniquefilterid[]" class="uniquefilterid" value="" />
			<span class="filteroptions"></span>
			{% if filter.currentfilters|length >1 %}
				<button class="remove_filter" type="button" onclick="return removeFilter(this, false)"><i class="icon-remove-sign"></i></button>
			{% endif %}
		</li>
	</div>
    
    {% for columnname, value in filter.filterdefinitions %}
    <div id="filterdummyoptions_{{columnname|replace({'.': '_'})}}" class="hidden">
        {% include value.type.template with {'filtertype': value.type, 'nameprefix': '', 'namesuffix': ''} %}
    </div>
    {% endfor %}
    
    
    
    
    
    
    
    
    <!--
    <form action="{{ path(basepath, extraparams) }}">
        <div id="filtermap">
            <div class="filterline" id="addline" {% if filter.currentfilters|length >0 %} style="display:none" {% endif %}>
                <select class="filterselect" id="addfilter" onchange="createFilter(this, true)">
                    <option>{{ "form.addfilter"|trans }}</option>
                    {% for columnname, value in filter.filterdefinitions %}
                    	{% if value['filtername'] is defined %}
                    		{% set filtername = value['filtername'] %}
                    	{% else %}
                    		{% set filtername = columnname %}
                    	{% endif %}
                        <option value="{{columnname}}">{{filtername|trans}}</option>
                    {% endfor %}
                </select>
            </div>
            {% for columnname, value in filter.currentfilters %}
            <div class="filterline">
                <select class="filterdummy filterselect" name="filter_columnname[]" onchange="updateOptions(this)">
                    {% for defcolumnname, defvalue in filter.filterdefinitions %}
                    	{% if defvalue['filtername'] is defined %}
                    		{% set filtername = defvalue['filtername'] %}
                    	{% else %}
                    		{% set filtername = defcolumnname %}
                    	{% endif %}
                    	<option value="{{defcolumnname}}" {% if value.columnname == defcolumnname %} selected="selected" {% endif %}>{{filtername | trans}}</option>
                    {% endfor %}
                </select>
                <input type="hidden" name="filter_uniquefilterid[]" class="uniquefilterid" value="{{value.uniqueid}}" />
                            <span class="filteroptions">
                                {% set namesuffix %}_{{value.uniqueid}}{%endset%}
                                {% include value.type.template with {'filtertype': value.type, 'data': value.data, 'nameprefix':'filter_', 'namesuffix': namesuffix} %}
                            </span>
                <a href="#" class="removefilterbutton" onclick="return removeFilter(this, false)"><img src="{{ asset('bundles/kunstmaanadmin/img/general/delete.png') }}" alt="delete" /></a> <a href="#" onclick="return createFilter(this, false)"><img src="{{ asset('bundles/kunstmaanadmin/img/general/add.png') }}" alt="add"/></a>
            </div>
            {% endfor %}
        </div>


        <div id="filterbuttons" {% if filter.currentfilters|length ==0 %} style="display:none" {% endif %}>
            <input class="btn primary" id="filterapplybutton" type="submit" value="Apply"/>
            <input class="btn reset" onclick="return resetFilters()" type="submit" value="Reset"/>
        </div>


        <div id="filterdummyline" style="display:none">
            <select class="filterdummy filterselect" name="columnname[]" onchange="updateOptions(this)">
                {% for columnname, value in filter.filterdefinitions %}
                {% if value['filtername'] is defined %}
                    		{% set filtername = value['filtername'] %}
                    	{% else %}
                    		{% set filtername = columnname %}
                    	{% endif %}
                <option value="{{columnname}}">{{filtername|trans}}</option>
                {% endfor %}
            </select>
            <input type="hidden" name="uniquefilterid[]" class="uniquefilterid" value="" />
                    <span class="filteroptions">

                    </span>
            <a href="#" class="removefilterbutton" onclick="return removeFilter(this, false)"><img src="{{ asset('bundles/kunstmaanadmin/img/general/delete.png') }}"/></a> <a href="#" onclick="return createFilter(this, false)"><img src="{{ asset('bundles/kunstmaanadmin/img/general/add.png') }}"/></a>
        </div>

        {% for columnname, value in filter.filterdefinitions %}
        <div id="filterdummyoptions_{{columnname|replace({'.': '_'})}}" style="display:none">
            {% include value.type.template with {'filtertype': value.type, 'nameprefix': '', 'namesuffix': ''} %}
        </div>
        {% endfor %}

    </form>
    
    <script>
        function resetFilters(){
            //jQuery(".removefilterbutton").click();
            //jQuery("#addline").show();
            jQuery(".filterline").remove();
            jQuery("#filterapplybutton").click();
            return false;
        }
        function removeFilter(element){
            if(jQuery("#filtermap").find(".filterline").length==2){
                jQuery(element).parent(".filterline").remove();
                jQuery("#addline").show();
            } else {
                jQuery(element).parent(".filterline").slideUp(function(){
                    jQuery(this).remove();
                });
            }
            return false;
        }
        function createFilter(element, andhide){
            var line = jQuery(element).parent(".filterline");
            if(andhide == true){
                line.hide();
            }
            var uniqueid = calculateUniqueFilterId();
            var newitem = jQuery("<div/>", {class:'filterline', style:'display:none'}).append(jQuery("#filterdummyline").html());
            line.after(newitem);
            newitem.find(".uniquefilterid").val(uniqueid);
            newitem.find(".filterdummy").val(line.find(".filterselect").val());
            updateOptions(newitem.find(".filterdummy"));
            newitem.find("input, select").each(function(){
                jQuery(this).attr("name", "filter_" + jQuery(this).attr("name"));
            });
            newitem.find(".filteroptions").find("input:not(.uniquefilterid), select").each(function(){
                jQuery(this).attr("name", jQuery(this).attr("name") + "_" + uniqueid);
				if(jQuery(this).hasClass("datepick")){
					jQuery(this).datePicker();
				}
            });
            if(andhide == true){
                newitem.show();
                line.find("select").val("");
            } else {
                newitem.slideDown();
            }
            jQuery("#filterbuttons").show();

            return false;
        }

        function calculateUniqueFilterId(){
            var result = 1;
            jQuery("input.uniquefilterid").each(function(){
                var value = parseInt( jQuery(this).val() );
                if(result <= value){
                    result = value+1;
                }
            });
            return result;
        }

        function updateOptions(element){
            var val = jQuery(element).val();
            val = val.replace('.',  '_');
            jQuery(element).parent(".filterline").find(".filteroptions").html(jQuery('#filterdummyoptions_'+ val).html());
           	jQuery(element).parent(".filterline").find(".datepick").datePicker();
        }
    </script>
    -->
{% endif %}